// Code generated by protoc-gen-go. DO NOT EDIT.
// source: content-service.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VideoInfo struct {
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoInfo) Reset()         { *m = VideoInfo{} }
func (m *VideoInfo) String() string { return proto.CompactTextString(m) }
func (*VideoInfo) ProtoMessage()    {}
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0ada9bf3eb20d4d, []int{0}
}

func (m *VideoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoInfo.Unmarshal(m, b)
}
func (m *VideoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoInfo.Marshal(b, m, deterministic)
}
func (m *VideoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoInfo.Merge(m, src)
}
func (m *VideoInfo) XXX_Size() int {
	return xxx_messageInfo_VideoInfo.Size(m)
}
func (m *VideoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VideoInfo proto.InternalMessageInfo

func (m *VideoInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type VideoInfoRequest struct {
	ApiVersion           string   `protobuf:"bytes,1,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoInfoRequest) Reset()         { *m = VideoInfoRequest{} }
func (m *VideoInfoRequest) String() string { return proto.CompactTextString(m) }
func (*VideoInfoRequest) ProtoMessage()    {}
func (*VideoInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0ada9bf3eb20d4d, []int{1}
}

func (m *VideoInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoInfoRequest.Unmarshal(m, b)
}
func (m *VideoInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoInfoRequest.Marshal(b, m, deterministic)
}
func (m *VideoInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoInfoRequest.Merge(m, src)
}
func (m *VideoInfoRequest) XXX_Size() int {
	return xxx_messageInfo_VideoInfoRequest.Size(m)
}
func (m *VideoInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VideoInfoRequest proto.InternalMessageInfo

func (m *VideoInfoRequest) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *VideoInfoRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type VideoInfoReply struct {
	VideoInfo            *VideoInfo `protobuf:"bytes,2,opt,name=videoInfo,proto3" json:"videoInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *VideoInfoReply) Reset()         { *m = VideoInfoReply{} }
func (m *VideoInfoReply) String() string { return proto.CompactTextString(m) }
func (*VideoInfoReply) ProtoMessage()    {}
func (*VideoInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0ada9bf3eb20d4d, []int{2}
}

func (m *VideoInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoInfoReply.Unmarshal(m, b)
}
func (m *VideoInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoInfoReply.Marshal(b, m, deterministic)
}
func (m *VideoInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoInfoReply.Merge(m, src)
}
func (m *VideoInfoReply) XXX_Size() int {
	return xxx_messageInfo_VideoInfoReply.Size(m)
}
func (m *VideoInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_VideoInfoReply proto.InternalMessageInfo

func (m *VideoInfoReply) GetVideoInfo() *VideoInfo {
	if m != nil {
		return m.VideoInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*VideoInfo)(nil), "v1.VideoInfo")
	proto.RegisterType((*VideoInfoRequest)(nil), "v1.VideoInfoRequest")
	proto.RegisterType((*VideoInfoReply)(nil), "v1.VideoInfoReply")
}

func init() { proto.RegisterFile("content-service.proto", fileDescriptor_e0ada9bf3eb20d4d) }

var fileDescriptor_e0ada9bf3eb20d4d = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0xce, 0xcf, 0x2b,
	0x49, 0xcd, 0x2b, 0xd1, 0x2d, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x2a, 0x33, 0x54, 0x52, 0xe4, 0xe2, 0x0c, 0xcb, 0x4c, 0x49, 0xcd, 0xf7, 0xcc,
	0x4b, 0xcb, 0x17, 0x12, 0xe1, 0x62, 0x2d, 0xc9, 0x2c, 0xc9, 0x49, 0x95, 0x60, 0x52, 0x60, 0xd4,
	0xe0, 0x0c, 0x82, 0x70, 0x94, 0x9c, 0xb8, 0x04, 0xe0, 0x4a, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x84, 0xe4, 0xb8, 0xb8, 0x12, 0x0b, 0x32, 0xc3, 0x52, 0x8b, 0x8a, 0x33, 0xf3, 0xf3, 0x24,
	0x18, 0xc1, 0xca, 0x91, 0x44, 0x84, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0xc0, 0xc6, 0x30, 0x07, 0x31,
	0x65, 0xa6, 0x28, 0xd9, 0x72, 0xf1, 0x21, 0x99, 0x51, 0x90, 0x53, 0x29, 0xa4, 0xcd, 0xc5, 0x59,
	0x06, 0x13, 0x01, 0x2b, 0xe4, 0x36, 0xe2, 0xd5, 0x2b, 0x33, 0xd4, 0x43, 0x28, 0x43, 0xc8, 0x1b,
	0xf9, 0x70, 0xf1, 0x39, 0x43, 0xbc, 0x10, 0x0c, 0xf1, 0x81, 0x90, 0x15, 0x17, 0x8f, 0x7b, 0x6a,
	0x09, 0x92, 0xd3, 0x51, 0xf5, 0x42, 0x9c, 0x29, 0x25, 0x84, 0x26, 0x5a, 0x90, 0x53, 0xa9, 0xc4,
	0x90, 0xc4, 0x06, 0xf6, 0xbe, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x80, 0x2b, 0x1d, 0xb6, 0x17,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContentServiceClient is the client API for ContentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContentServiceClient interface {
	GetVideoInfo(ctx context.Context, in *VideoInfoRequest, opts ...grpc.CallOption) (*VideoInfoReply, error)
}

type contentServiceClient struct {
	cc *grpc.ClientConn
}

func NewContentServiceClient(cc *grpc.ClientConn) ContentServiceClient {
	return &contentServiceClient{cc}
}

func (c *contentServiceClient) GetVideoInfo(ctx context.Context, in *VideoInfoRequest, opts ...grpc.CallOption) (*VideoInfoReply, error) {
	out := new(VideoInfoReply)
	err := c.cc.Invoke(ctx, "/v1.ContentService/GetVideoInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServiceServer is the server API for ContentService service.
type ContentServiceServer interface {
	GetVideoInfo(context.Context, *VideoInfoRequest) (*VideoInfoReply, error)
}

// UnimplementedContentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedContentServiceServer struct {
}

func (*UnimplementedContentServiceServer) GetVideoInfo(ctx context.Context, req *VideoInfoRequest) (*VideoInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideoInfo not implemented")
}

func RegisterContentServiceServer(s *grpc.Server, srv ContentServiceServer) {
	s.RegisterService(&_ContentService_serviceDesc, srv)
}

func _ContentService_GetVideoInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VideoInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).GetVideoInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.ContentService/GetVideoInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).GetVideoInfo(ctx, req.(*VideoInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.ContentService",
	HandlerType: (*ContentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVideoInfo",
			Handler:    _ContentService_GetVideoInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "content-service.proto",
}
